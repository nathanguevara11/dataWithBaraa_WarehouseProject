---------------------------------------------------------------------------------------
--EXPLORATORY DATA ANALYSIS--
---------------------------------------------------------------------------------------
--rummage thorugh database
SELECT * FROM INFORMATION_SCHEMA.TABLES;
SELECT * FROM INFORMATION_SCHEMA.COLUMNS;

--dimension exploration 
SELECT DISTINCT country FROM gold.dim_customers;
SELECT DISTINCT epx_category, epx_sub_subcategory FROM gold.dim_products
ORDER BY epx_category;

--order date exploration 
SELECT
	MIN(order_date) AS earliest_date, 
	MAX(order_date) AS latest_date, 
	DATE_PART('year',AGE(MAX(order_date), MIN(order_date))) * 12 + DATE_PART('month',AGE(MAX(order_date), MIN(order_date)))as date_range
FROM gold.fact_sales;
SELECT * FROM gold.dim_customers;
SELECT
	MIN(birthday) AS earliest_bdate, 
	MAX(birthday) AS latest_bdate, 
	(DATE_PART('year',AGE(MAX(birthday), MIN(birthday))) * 12 + DATE_PART('month',AGE(MAX(birthday), MIN(birthday))))/12 as bdate_range
FROM gold.dim_customers;

--total sales 
SELECT SUM(quantity) AS total_quantity FROM gold.fact_sales; 
--total items sold 
SELECT COUNT(quantity) AS total_quantity FROM gold.fact_sales; 
--average price 
SELECT ROUND(AVG(filtered_price), 2) AS average_price FROM gold.fact_sales; 

--total orders 
SELECT COUNT(order_number) AS total_orders FROM gold.fact_sales;
SELECT COUNT(DISTINCT(order_number)) AS total_orders FROM gold.fact_sales;

--total products
SELECT COUNT(product_name) AS total_products FROM gold.dim_products; 
SELECT COUNT(DISTINCT(product_name)) AS total_products_dis FROM gold.dim_products;

--total customers
SELECT COUNT(customer_id) AS total_customers FROM gold.dim_customers; 
--total customers that have placed an order
SELECT COUNT(DISTINCT(customer_id)) AS total_customers_dis FROM gold.dim_customers;  

--generate a report 
--total sales 
SELECT 'Total Sales' AS measure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
--total items sold 
SELECT 'Total Quantity' AS measure_name,COUNT(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
--average price 
SELECT 'Average Price' AS measure_name,CAST(AVG(filtered_price) AS INTEGER) AS measure_value FROM gold.fact_sales
UNION ALL
--total orders 
SELECT 'Total Orders' AS measure_name,COUNT(order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Distinct Orders' AS measure_name,COUNT(DISTINCT(order_number)) AS measure_value FROM gold.fact_sales
UNION ALL
--total products
SELECT 'Total Products' AS measure_name,COUNT(product_name) AS measure_value FROM gold.dim_products 
UNION ALL
SELECT 'Total Distinct Products' AS measure_name,COUNT(DISTINCT(product_name)) AS measure_value FROM gold.dim_products
UNION ALL
--total customers
SELECT 'Total Customers' AS measure_name,COUNT(customer_id) AS measure_value FROM gold.dim_customers
UNION ALL
--total customers that have placed an order
SELECT 'Total Customers Who Bought Something' AS measure_name,COUNT(DISTINCT(customer_id)) AS measure_value FROM gold.dim_customers;  


--find total customers by country 
SELECT country, COUNT(DISTINCT(customer_id))
FROM gold.dim_customers
GROUP BY country;

--find total customers by gender 
SELECT gender, COUNT(DISTINCT(customer_id))
FROM gold.dim_customers
GROUP BY gender;

--find total products by category 
SELECT epx_category, COUNT(DISTINCT(product_key))
FROM gold.dim_products
GROUP BY epx_category;

--find total customers by country 
SELECT country, COUNT(DISTINCT(customer_id))
FROM gold.dim_customers
GROUP BY country;

--find average cost by each category 
SELECT epx_category, ROUND(AVG(product_cost), 2)
FROM gold.dim_products
GROUP BY epx_category;

--find total revenue for each category
SELECT epx_category, ROUND(SUM(sales), 2)
FROM gold.fact_sales
GROUP BY epx_category; 

--total revenue generated by each customer 
SELECT customer_id, first_name, last_name, SUM(sales) AS sum_sales
FROM gold.fact_sales
GROUP BY customer_id, first_name, last_name
ORDER BY sum_sales DESC; 

--distributon of sold items accross countries 
SELECT country, SUM(quantity) AS sum_quantity
FROM gold.fact_sales
GROUP BY country
ORDER BY sum_quantity DESC; 

--find which 5 products have the highest revenue 
SELECT product_name, SUM(sales) as sum_sales
FROM gold.fact_sales
GROUP BY product_name
ORDER BY sum_sales DESC
LIMIT 5; 

--bottom 5/lowest revenue
SELECT product_name, SUM(sales) as sum_sales
FROM gold.fact_sales
GROUP BY product_name
ORDER BY sum_sales 
LIMIT 5;


--creating a rank using window functions limit 5
SELECT product_name, SUM(sales) as sum_sales, RANK() OVER(ORDER BY SUM(sales))
FROM gold.fact_sales
GROUP BY product_name
ORDER BY sum_sales 
LIMIT 5;

--rank using a window function in descending order limit 10  
SELECT product_name, SUM(sales) as sum_sales, RANK() OVER(ORDER BY SUM(sales) DESC)
FROM gold.fact_sales
GROUP BY product_name
ORDER BY sum_sales DESC
LIMIT 10;
	
